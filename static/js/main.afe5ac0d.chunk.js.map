{"version":3,"sources":["components/Header.js","components/Searchbar.js","components/Favouritebutton.js","components/Deletebutton.js","components/Friend.js","components/Friends.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","myFriendList","dropFilterAll","dropFilterFav","dropFilterNotFav","useState","dropvalue","setDropText","sortList","setSortOrder","className","onClick","name","id","value","onChange","e","target","Searchbar","addMyFriend","myFriendData","setFrndList","setText","favourite","setFavourite","myFriendNewData","onSubmit","preventDefault","about","charAt","toLowerCase","alert","confirmMessage","forEach","frnd","a","window","confirm","type","autoComplete","placeholder","func","delay","inDebounce","debounce","length","filter","friend","startsWith","toLocaleLowerCase","filterList","checked","currentTarget","Favouritebutton","favFriend","onToggle","style","color","Deletebutton","onDel","Friend","onDelete","Friends","friendsdata","onDeleteFriend","onToggleFav","map","App","friendsData","setList","friendNewData","setNewFriendList","useEffect","addFriend","myFriend","Math","floor","random","newFriend","frndList","console","log","multiplier","slice","sort","b","list","item","fri","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afe5ac0d.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\nimport { FaSortAlphaUp } from 'react-icons/fa';\r\nimport { FaSortAlphaDown } from 'react-icons/fa';\r\nimport {useState} from 'react'\r\nconst Header = ({title, myFriendList, dropFilterAll, dropFilterFav, dropFilterNotFav}) => {\r\n  \r\n    const [dropvalue, setDropText] = useState('All');\r\n     let [sortList, setSortOrder] = useState(false);\r\n   \r\n    const sortFriends = () => {\r\n        setSortOrder(!sortList)\r\n        if(sortList){\r\n            myFriendList('asc');\r\n            \r\n        }else{\r\n            myFriendList('desc');\r\n        }\r\n        \r\n\r\n     }\r\n\r\n     const changeList = (e) => {\r\n     \r\n        setDropText(e.target.value);\r\n        if(e.target.value === 'All'){\r\n            \r\n            dropFilterAll();\r\n        } \r\n        if (e.target.value === 'Fav'){\r\n            \r\n            dropFilterFav();\r\n        } \r\n        if (e.target.value === 'Notfav') {\r\n            dropFilterNotFav();\r\n        } \r\n           \r\n     }\r\n\r\n  return (\r\n        <div>\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n            <button className=\"btn-sort\" onClick={sortFriends}>{!sortList ? (<FaSortAlphaUp/>) : (<FaSortAlphaDown/>) }</button>\r\n            <select name=\"friends\" id=\"frnddrop\" \r\n            value={dropvalue} \r\n            onChange={changeList} >\r\n            <option value=\"All\" >All</option>\r\n            <option value=\"Fav\">Favourite</option>\r\n            <option value=\"Notfav\">Not Favourite</option>\r\n            </select>\r\n        </header>\r\n    </div>\r\n        \r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\n\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport {useState} from 'react'\r\n\r\nconst Searchbar = ({addMyFriend, myFriendData, setFrndList}) => {\r\n\r\n    const [name, setText] = useState('');\r\n    const [favourite, setFavourite] = useState(false)\r\n    let [myFriendNewData] = useState([]);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        let about = ''\r\n        if(!name){\r\n           \r\n            alert('Please add a task');\r\n            return\r\n        }\r\n        if(name && name.charAt(0) === name.charAt(0).toLowerCase()){\r\n\r\n            alert('Name should start with capital letter');\r\n            return\r\n        }\r\n        if(favourite === false){\r\n            about = 'not my friend';\r\n        }else {\r\n            about = 'is my friend';\r\n        }\r\n\r\n        let confirmMessage = '';\r\n        \r\n        myFriendData.forEach((frnd) => {\r\n        if(name === frnd.name){\r\n            confirmMessage = 'A friend with this name already exists. Are you sure ?'\r\n            let a = window.confirm(confirmMessage); \r\n            if(a === true){\r\n                addMyFriend({name, favourite, about});\r\n                setText('');\r\n                setFavourite(false);\r\n            }else {\r\n                confirmMessage = ''\r\n                a= false;\r\n            }\r\n        }else{  \r\n          \r\n         \r\n                addMyFriend({name, favourite, about});\r\n                setText('');\r\n                setFavourite(false);\r\n            \r\n            \r\n        }\r\n        });\r\n      \r\n    }\r\n    const debounce = (func, delay) => {\r\n        let inDebounce;\r\n        return function() { \r\n          const context = this;\r\n          const args = arguments;\r\n          clearTimeout(inDebounce)\r\n          inDebounce = setTimeout(() => func.apply(context, args), delay)\r\n        }\r\n      }\r\n\r\n    const filterList = (name) => {\r\n        if(name.length === 0){\r\n        myFriendNewData = myFriendData;\r\n        }else {\r\n        myFriendNewData =  myFriendData.filter((friend) => name.length > 0 ? friend.name.toLowerCase().startsWith(name.toLocaleLowerCase()) : myFriendData);\r\n        }\r\n        setFrndList(myFriendNewData);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <div className=\"form-control\">\r\n            <label>Friend Name</label>\r\n            <input type='text' \r\n                name='searchbar'\r\n                autoComplete=\"off\"\r\n                placeholder='Add or search your friend'\r\n                id='search'\r\n                value={name}\r\n                onChange={(e) => {setText(e.target.value);debounce(filterList(e.target.value), 3000)}}\r\n                />\r\n            </div>\r\n            <div className=\"form-control form-control-check\">\r\n              <label id=\"favlabel\">Add to Favourite</label>\r\n              <input type='checkbox' checked={favourite} value={favourite} onChange={(e) => setFavourite(e.currentTarget.checked)}/>\r\n            </div>\r\n           \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Searchbar\r\n","import { FaStar } from 'react-icons/fa';\r\n\r\nconst Favouritebutton = ({favFriend, onToggle}) => {\r\n    const favstyle={color: 'yellow'}\r\n    const myfavstyle={color:'lightgrey'};\r\n    \r\n    return ( \r\n    <button className='favbtn' onClick={onToggle}><FaStar style={favFriend.favourite ? favstyle : myfavstyle}/></button>\r\n        )\r\n}\r\n\r\nexport default Favouritebutton\r\n","import {FaTrashAlt} from 'react-icons/fa';\r\n\r\nconst Deletebutton = ({onDel}) => {\r\n    return ( \r\n    <button \r\n        className='delbtn'  onClick={onDel}><FaTrashAlt style={{color:'grey'}}/></button>\r\n        )\r\n}\r\n\r\nexport default Deletebutton\r\n","import Favouritebutton from './Favouritebutton';\r\nimport Deletebutton from './Deletebutton';\r\nconst Friend = ({friend, onDelete, onToggle}) => {\r\n\r\n    const delfunc = () => { \r\n    let confirmMessage = 'Are you sure you want to delete friend?';\r\n    let a = window.confirm(confirmMessage); \r\n    if(a === true){\r\n    onDelete(friend.id)\r\n    confirmMessage = 'You pressed OK!';\r\n    }else confirmMessage = 'You pressed Cancel!';\r\n\r\n}\r\n\r\n    return (\r\n        <div className=\"friend\">\r\n              <h3>{friend.name}<span className=\"btn-group\">\r\n                  <Favouritebutton onToggle={() => onToggle(friend.id)} favFriend = {friend}/> \r\n                  <Deletebutton onDel={ delfunc }/></span>\r\n                  <span id=\"about\">{friend.about}</span></h3>\r\n              \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friend\r\n","import Friend from './Friend'\r\nconst Friends = ({friendsdata, onDeleteFriend, onToggleFav}) => {\r\n   \r\n\r\n    return (\r\n        <>\r\n          {friendsdata.map((friend) => (\r\n        \r\n            <Friend \r\n              key={friend.id} \r\n              friend={friend} \r\n              onDelete={onDeleteFriend}\r\n              onToggle={onToggleFav}\r\n              />\r\n         )\r\n              )}  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Friends\r\n","import Header from './components/Header'\nimport Searchbar from './components/Searchbar';\nimport Friends from './components/Friends';\nimport {useState, useEffect} from 'react'; \nconst App = () => {\n  \n  const [friendsData, setList] = useState([\n    {\n        id: 1,\n        name: 'Sundarm',\n        about: 'is your friend',\n        favourite: true\n    },\n    {\n        id: 2,\n        name: 'Sarthak',\n        about: 'is not your friend',\n        favourite: false\n    },\n    {\n        id: 3,\n        name: 'Mrinal',\n        about: 'is your friend',\n        favourite: true\n    },\n    {\n      id: 4,\n      name: 'Ayush',\n      about: 'is not your friend',\n      favourite: false\n  }\n  ]);\n\n  const  [friendNewData, setNewFriendList] = useState(friendsData);\n  \n  useEffect(() => {\n    setNewFriendList(friendsData);\n  },[friendsData]);\n\n\n  const addFriend = (myFriend) => {\n    if(myFriend){\n    const id = Math.floor(Math.random() * 1000) + 1;\n    const newFriend = { id, ...myFriend }\n    setList([...friendsData, newFriend]);\n  }\n  }\n\n\n  const deleteFriend = (id) => {\n    setList(friendsData.filter((item) => item.id !== id));\n  }\n\n  const toggleFavourite = (id) => {\n    let isFriend = 'is my friend';\n    let isNotFriend = 'not my friend';\n    setList(friendsData.map((fri) => fri.id === id ? {...fri, favourite: !fri.favourite, about: !fri.favourite ? isFriend : isNotFriend} : fri));\n  }\n\n  const sortFriendsList = (frndList) => {\n    console.log(frndList);\n    let multiplier = 1;\n    if(frndList === 'asc'){\n      multiplier = -1;\n    }\n    setNewFriendList(friendsData.slice().sort((a,b) => { \n      if(a.name < b.name){\n        return -1 * multiplier;\n      } \n      if(a.name > b.name){\n        return 1 * multiplier;\n      }\n        return 0;\n      \n     }));\n  }\n\n\n  \n  const dropFilterAll = () => setNewFriendList([...friendsData]);\n\n  const dropFilterFav = () => setNewFriendList(friendsData.filter((list) => list.favourite === true));\n\n  const dropFilterNotFav = () => setNewFriendList(friendsData.filter((list) => list.favourite === false));\n\n\n  return (\n    <div className = 'container'>\n      <Header title='Friends List' \n        addMyFriend={addFriend} \n        myFriendList={sortFriendsList}\n        dropFilterAll={dropFilterAll}\n        dropFilterFav={dropFilterFav}\n        dropFilterNotFav={dropFilterNotFav}\n        />\n      <Searchbar addMyFriend={addFriend} myFriendData={friendsData} setFrndList={setNewFriendList}/>\n    {friendNewData.length >0 ? (\n    <Friends friendsdata={friendNewData} \n      onDeleteFriend={deleteFriend} onToggleFav={toggleFavourite}/>) : (' Sorry no friend present in the list') }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}